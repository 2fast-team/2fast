<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations" 
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:Windows10version1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
    xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///Styles/Generic/Button.xaml" />
        <ResourceDictionary Source="ms-appx:///Styles/Generic/ToggleSwitch.xaml" />
        <ResourceDictionary Source="ms-appx:///Styles/Generic/CommandBarAndAppBar.xaml" />
        <ResourceDictionary Source="ms-appx:///Styles/Generic/RadioButton.xaml" />
        <ResourceDictionary Source="ms-appx:///Styles/Generic/NavigationView.xaml" />
        <ResourceDictionary Source="ms-appx:///Styles/Generic/ScrollBar_themeresources.xaml" />
        <ResourceDictionary Source="ms-appx:///Controls/CardExpanderControl/CardExpanderControl.xaml" />
        <ResourceDictionary Source="ms-appx:///Styles/Generic/PersonPicture.xaml" />


    </ResourceDictionary.MergedDictionaries>

    <!--<CornerRadius x:Key="OverlayCornerRadius">0</CornerRadius>
    <CornerRadius x:Key="ControlCornerRadius">0</CornerRadius>
    <CornerRadius x:Key="NavigationViewContentGridCornerRadius">0</CornerRadius>-->

    <Thickness x:Key="MenuBarItemBorderThickness">2,2,2,2</Thickness>
    <Thickness x:Key="GridViewItemMultiselectBorderThickness">2,2,2,2</Thickness>
    <Thickness x:Key="CheckBoxBorderThemeThickness">2</Thickness>
    <x:Double x:Key="GridViewItemSelectedBorderThemeThickness">2</x:Double>
    <x:Double x:Key="RadioButtonBorderThemeThickness">2</x:Double>
    <Thickness x:Key="ButtonBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="CalendarDatePickerBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="TimePickerBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="DatePickerBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="ToggleSwitchOuterBorderStrokeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="RepeatButtonBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="SearchBoxBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="ToggleButtonBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="TextControlBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="ButtonRevealBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="RepeatButtonRevealBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="ToggleButtonRevealBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="AppBarEllipsisButtonRevealBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="AppBarButtonRevealBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="AppBarToggleButtonRevealBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="ListViewItemRevealBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="GridViewItemRevealBorderThemeThickness">2,2,2,2</Thickness>
    <Thickness x:Key="ComboBoxItemRevealBorderThemeThickness">2,2,2,2</Thickness>
    <x:Double x:Key="PersonPictureEllipseBadgeStrokeThickness">2</x:Double>
    <Thickness x:Key="CardBorderThickness">1</Thickness>

    <x:Double x:Key="SecondaryTextFontSize">12</x:Double>
    <x:Double x:Key="CardActionControlMinWidth">248</x:Double>

    <Style x:Key="SecondaryTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource SecondaryTextFontSize}"/>
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}"/>
    </Style>

    <!-- Caret/Chevron Icons -->
    <x:String x:Key="ScrollBarCaretLeft">&#xE0E2;</x:String>
    <x:String x:Key="ScrollBarCaretRight">&#xE0E3;</x:String>
    <x:String x:Key="ScrollBarCaretUp">&#xE0E4;</x:String>
    <x:String x:Key="ScrollBarCaretDown">&#xE0E5;</x:String>

    <x:String x:Key="FlipViewCaretLeft">&#xE0E2;</x:String>
    <x:String x:Key="FlipViewCaretRight">&#xE0E3;</x:String>
    <x:String x:Key="FlipViewCaretUp">&#xE0E4;</x:String>
    <x:String x:Key="FlipViewCaretDown">&#xE0E5;</x:String>

    <animations:ImplicitAnimationSet  x:Key="ImplicitOffset">
        <animations:OffsetAnimation Duration="0:0:0.3"/>
    </animations:ImplicitAnimationSet>

    <media:AttachedCardShadow 
        x:Key="CommonShadow" 
        BlurRadius="30" 
        Color="{ThemeResource SystemAccentColor}"/>

    <Style x:Key="BorderShadowStyle" TargetType="Border">
        <Setter Property="ui:Effects.Shadow" Value="{StaticResource CommonShadow}"/>
    </Style>

    <Style TargetType="muxc:TeachingTip">
        <Setter Property="BorderBrush" Value="{ThemeResource SystemAccentColor}"/>
        <!--<Setter Property="CornerRadius" Value="0"/>-->
    </Style>

    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource DefaultComboBoxItemStyle}">
        <Setter Property="CornerRadius" Value="0"/>
    </Style>

    <Style x:Name="TwoFASelectionListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="animations:Implicit.Animations" Value="{StaticResource ImplicitOffset}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="2,16,20,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ListViewItemPresenter 
                        CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" 
                        ContentMargin="{TemplateBinding Padding}" 
                        CheckMode="Inline" ContentTransitions="{TemplateBinding ContentTransitions}" 
                        CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" 
                        DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" 
                        DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" 
                        DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" 
                        DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" 
                        FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}" 
                        FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}" 
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" 
                        PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" 
                        ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" 
                        SelectionCheckMarkVisualEnabled="True" 
                        SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" 
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="toolkit:MarkdownTextBlock">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style x:Key="HighlightTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="BorderBrush" Value="Red" />
        <Setter Property="SelectionHighlightColor" Value="Red" />
    </Style>

    <Style x:Key="HighlightPasswordBoxStyle" TargetType="TextBox" BasedOn="{StaticResource DefaultPasswordBoxStyle}">
        <Setter Property="BorderBrush" Value="Red" />
        <!--<Setter Property="SelectionHighlightColor" Value="Red" />-->
    </Style>

    <Style x:Key="ShellHeaderTitleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontWeight" Value="SemiLight" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings" />
    </Style>

    <Style TargetType="ContentDialog" BasedOn="{StaticResource MyContentDialogStyle}" />

    <Style x:Key="MyContentDialogStyle" TargetType="ContentDialog" BasedOn="{StaticResource DefaultContentDialogStyle}" >
        <Setter Property="SecondaryButtonStyle" Value="{ThemeResource ButtonRevealStyle}" />
        <Setter Property="CloseButtonStyle" Value="{ThemeResource ButtonRevealStyle}" />
        <Setter Property="PrimaryButtonStyle" Value="{ThemeResource ButtonRevealStyle}" />
    </Style>

</ResourceDictionary>
