<ContentDialog
    x:Class="Project2FA.UWP.Views.InAppPaymentContentDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Project2FA.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:markdown="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:strings="using:Project2FA.Strings"
    xmlns:mtc="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:models="using:Project2FA.Repository.Models"
    mc:Ignorable="d"
    Title="~InAppPaymentContentDialog.Title"
    x:Uid="InAppPaymentContentDialog"
    PrimaryButtonText="~InAppPaymentContentDialog.PrimaryButtonText"
    SecondaryButtonText="~InAppPaymentContentDialog.SecondaryButtonText"
    IsPrimaryButtonEnabled="{x:Bind ViewModel.PrimaryButtonCanClick, Mode=OneWay}">

    <ContentDialog.Resources>

        <Style TargetType="ToggleButton" x:Key="InAppPurchaseToggleButtonStyle">
            <Setter Property="Background" Value="{ThemeResource ToggleButtonRevealBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource ToggleButtonForeground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonRevealBorderThemeThickness}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="-3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPointerOver}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPointerOver}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPointerOver}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPressed}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPressed}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPressed}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundDisabled}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushDisabled}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundDisabled}" />
                                        </VisualState.Setters>
                                    </VisualState>

                                    <VisualState x:Name="Checked">
                                        <VisualState.Setters>
                                            <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundChecked}" />-->
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBackgroundChecked}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundChecked}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                            <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundCheckedPointerOver}" />-->
                                            <!--<Setter Target="ContentPresenter.BorderThickness" Value="4,4,4,4" />-->
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBackgroundChecked}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                            <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundCheckedPressed}" />-->
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBackgroundChecked}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundCheckedDisabled}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedDisabled}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminate}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminate}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminate}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminatePointerOver}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePointerOver}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePressed">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminatePressed}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePressed}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminateDisabled">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminateDisabled}" />
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminateDisabled}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter 
                                x:Name="ContentPresenter" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="{TemplateBinding CornerRadius}" 
                                Content="{TemplateBinding Content}" 
                                ContentTransitions="{TemplateBinding ContentTransitions}" 
                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                Padding="{TemplateBinding Padding}" 
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                AutomationProperties.AccessibilityView="Raw" />

                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="InAppPurchaseItem" x:DataType="models:InAppPaymentItemModel">
            <ToggleButton 
            Style="{StaticResource InAppPurchaseToggleButtonStyle}"
            IsEnabled="{x:Bind IsEnabled, Mode=OneWay}" 
            IsChecked="{x:Bind IsChecked,Mode=TwoWay}" 
            Click="ToggleButton_Click">
                <Grid 
                    Margin="12,0,12,0" 
                    MaxWidth="300"
                    MinHeight="400">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Image 
                        Source="{x:Bind Url,Mode=OneWay}"
                        Height="100"></Image>
                    <StackPanel Grid.Row="1" >
                        <markdown:MarkdownTextBlock
                            Foreground="{ThemeResource AppBarItemForegroundThemeBrush}"
                            Text="{x:Bind Description,Mode=OneWay}">
                        </markdown:MarkdownTextBlock>
                        <CheckBox 
                            HorizontalAlignment="Center"
                            Content="{x:Bind UidCheckBox, Mode=OneWay}"
                            IsChecked="{x:Bind IsChecked, Mode=TwoWay}"/>
                    </StackPanel>
                </Grid>
            </ToggleButton>
        </DataTemplate>

    </ContentDialog.Resources>

    <Grid>
        <StackPanel>
            <mtc:Carousel
            x:Name="Carousel_Main"
            ItemTemplate="{StaticResource InAppPurchaseItem}"
            ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}"
            SelectedIndex="{x:Bind ViewModel.SelectedIndex,Mode=TwoWay}"
            SelectedItem="{x:Bind ViewModel.SelectedItem,Mode=TwoWay}"
            ItemMargin="8">
                <mtc:Carousel.EasingFunction>
                    <CubicEase EasingMode="EaseOut" />
                </mtc:Carousel.EasingFunction>
            </mtc:Carousel>
            <muxc:PipsPager 
                HorizontalAlignment="Center"
                NumberOfPages="{x:Bind ViewModel.Items.Count,Mode=OneWay}"
                SelectedPageIndex="{x:Bind ViewModel.SelectedIndex,Mode=TwoWay}"/>
        </StackPanel>

        <Grid
            Visibility="{x:Bind ViewModel.IsLoading,Mode=OneWay}" 
            Background="{ThemeResource TranslucentBackgroundHighBrush}">
            <muxc:ProgressRing 
                IsActive="{x:Bind ViewModel.IsLoading,Mode=OneWay}" 
                Foreground="{ThemeResource SystemAccentColor}" 
                Width="80" 
                Height="80"/>
        </Grid>
    </Grid>
</ContentDialog>
